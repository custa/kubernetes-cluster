global:
  scrape_interval:     10s
  evaluation_interval: 10s

alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

rule_files:
# - "first_rules.yml"
# - "second_rules.yml"

scrape_configs:
# Scrape config for Prometheus itself.
- job_name: 'prometheus'
  static_configs:
  - targets: ['localhost:9090']

# Scrape config for API servers.
- job_name: 'kubernetes-apiserver'
  kubernetes_sd_configs:
  - role: endpoints
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
    action: keep
    regex: default;kubernetes;https

# Scrape config for nodes (kubelet).
- job_name: 'kubernetes-node'
  scheme: https
  tls_config:
    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  kubernetes_sd_configs:
  - role: node
  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: kubernetes.default.svc:443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics

# Scrape config for service endpoints.
- job_name: 'kubernetes-endpoints'
  kubernetes_sd_configs:
  - role: endpoints
  tls_config:
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  #  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
  #    action: keep
  #    regex: true
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
    target_label: __scheme__
    regex: (https?)
  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
    regex: ([^:]+):(?:\d+)?;(\d+)
    replacement: ${1}:${2}
    target_label: __address__
  # 仅采集 endpoint port 暴露的 target
  - source_labels: [__meta_kubernetes_endpoint_ready]
    action: keep
    regex: .+
  # drop: Prometheus 已经配置为单独 job
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
    regex: monitoring;prometheus
    action: drop
  # drop: API Server 已经配置为单独 job
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]
    regex: default;kubernetes
    action: drop
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    target_label: kubernetes_service_name

# Scrape config for pods.
- job_name: 'kubernetes-pod'
  kubernetes_sd_configs:
  - role: pod
  tls_config:
    insecure_skip_verify: true
  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
    target_label: __metrics_path__
    regex: (.+)
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
    target_label: __scheme__
    regex: (https?)
  # 如果指定采集端口，Pod 中容器的声明端口会被忽略
  - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
    regex: ([^:]+):(?:\d+)?;(\d+)
    replacement: ${1}:${2}
    target_label: __address__
  # 去掉无声明端口的容器生成的 target
  - source_labels: [__meta_kubernetes_pod_container_port_number]
    action: keep
    regex: .+
  - action: labelmap
    regex: __meta_kubernetes_pod_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_pod_name]
    target_label: kubernetes_pod_name

# 使用 blackbox-exporter 探测 http(s) 服务
- job_name: 'kubernetes-service-http'
  metrics_path: /probe
  params:
    module: [http_2xx]
  kubernetes_sd_configs:
  - role: service
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_module]
    action: keep
    regex: http_2xx
  - source_labels: [__address__]
    target_label: __param_target
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme,__param_target]
    regex: (https?);(.+)
    target_label: __param_target
    replacement: ${1}://${2}
  - target_label: __address__
    replacement: blackbox-exporter.monitoring.svc:9115
  - source_labels: [__param_target]
    target_label: instance
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    target_label: kubernetes_service_name

# 使用 blackbox-exporter 探测 DNS 服务
- job_name: "kubernetes-service-dns"
  metrics_path: /probe
  params:
    module: [dns]
  kubernetes_sd_configs:
  - role: service
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_module]
    action: keep
    regex: dns
  - source_labels: [__address__]
    target_label: __param_target
  - target_label: __address__
    replacement: blackbox-exporter.monitoring.svc:9115
  - source_labels: [__param_target]
    target_label: instance
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    target_label: kubernetes_service_name
